scp_program -> proc_sum (*	
-> rrel_params: .proc_sum_params 
(*
	-> rrel_1: rrel_in: _param;;
        -> rrel_2: rrel_in: _answer;;	
*);;

-> rrel_operators: .proc_sum_operator_set (*

	//1. Вызов процедуры, которая проверяет количество в уравнении неизвестных переменных (должно быть не более одной)
	-> rrel_init: .proc_sum_operator1 
		(*
			  <- call;;
			  -> rrel_1: rrel_fixed: rrel_scp_const: proc_check;;
			  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator1_params 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		                        -> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
				*);;
			  -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			  => nrel_goto: .proc_sum_operator2;;
		*);;

		  -> .proc_sum_operator2 (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

		  => nrel_goto: .proc_sum_operator3;;
		*);;

	//2. Если в ответ ничего не записалось, то РЕТУРН (А записаться должна была одна неизвестная уравнения в процедуре check.)
                  -> .proc_sum_operator3 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _something_in_the_answer;;
                  
                  => nrel_then: .proc_sum_operator3A;;//Если есть неизвестная переменная, которую нужно найти, то идём далее
		  => nrel_else: .proc_sum_operator_return;; //Если нету, то РЕТУРН
		*);;

	//2.a). Вызов процедуры, которая конвертирует в СИ
	-> .proc_sum_operator3A 
		(*
			  <- call;;
			  -> rrel_1: rrel_fixed: rrel_scp_const: proc_conversion;;
			  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator3A_params 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		                        -> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
				*);;
			  -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			  => nrel_goto: .proc_sum_operator3B;;
		*);;

		  -> .proc_sum_operator3B (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

		  => nrel_goto: .proc_sum_operator4;;
		*);;

	//3. Генерируем узел, который впоследствии будет показывать наличие разных единиц измерения у членов уравнения
                 -> .proc_sum_operator4 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _check;;

		 => nrel_goto: .proc_sum_operator5;;
		 *);; 

	//4. Вызываем процедуру РАЗМ, которая определяет, есть ли разные единицы измерения у членов уравнения или нет
                  -> .proc_sum_operator5 (*
		  <- call;;
		  -> rrel_1: rrel_fixed: rrel_scp_const: proc_razm;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator5_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _param;;
                                -> rrel_2: rrel_fixed: rrel_scp_var: _check;;
			*);;
		  -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

		  => nrel_goto: .proc_sum_operator6;;
		*);;

		  -> .proc_sum_operator6 (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

		  => nrel_goto: .proc_sum_operator7;;
		*);;

	//5. Если в чеке что-нибудь есть, значит в уравнении заданы разные единицы измерения и оно не корректно. => Тест фэйлофый. => РЕТУРН
	-> .proc_sum_operator7 
		(*
			  <- searchElStr3;;
			  -> rrel_1: rrel_fixed: rrel_scp_var: _check;;
			  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			  -> rrel_3: rrel_assign: rrel_scp_var: _mm1;;
		          
		          => nrel_then: .proc_sum_operator_7A;;//РЕТУРН
			  => nrel_else: .proc_sum_operator8;;//Все единицы измерения одинаковы у членов уравнения
		*);;

	//5.a) Чек удаляется и делается РЕТУРН
	-> .proc_sum_operator_7A 
		(*
			 <- eraseEl;;
			 -> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _check;;

			 => nrel_goto: .proc_sum_operator_return;;
		 *);;

      	//6. Чек удаляется
	-> .proc_sum_operator8
		(*
		 <- eraseEl;;
		 -> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _check;;

		 => nrel_goto: .proc_sum_operator9;;
		 *);;

	//7. Генерируем
	-> .proc_sum_operator9 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _some_node_1_1;;

		 => nrel_goto: .proc_sum_operator10;;
		 *);;

	//8. Генерируем
	-> .proc_sum_operator10 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _some_node_1_2;;

		 => nrel_goto: .proc_sum_operator12;;
		 *);;

	//10. Генерируем
	-> .proc_sum_operator12 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _some_node_2_2;;

		 => nrel_goto: .proc_sum_operator13;;
		 *);;

	//11. Генерируем
	-> .proc_sum_operator13 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _some_node_3_1;;

		 => nrel_goto: .proc_sum_operator14;;
		 *);;

	//12. Генерируем
	-> .proc_sum_operator14 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _ssilk3;;

		 => nrel_goto: .proc_sum_operator15;;
		 *);;

	//13. Ищем узел суммы
	-> .proc_sum_operator15 
		(*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		  -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _binary_arc;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _sum_node;;
                  
                  => nrel_then: .proc_sum_operator16;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

	//14. Выясняем, с числовым значением ли узел суммы или это неизвестная переменная?
	-> .proc_sum_operator16 
		(*
			  <- searchElStr5;;
			  -> rrel_1: rrel_assign: rrel_scp_var: _some_node;;
			  -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc5;;
			  -> rrel_3: rrel_fixed: rrel_scp_var: _sum_node;;
		          -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc6;;
		          -> rrel_5: rrel_fixed: rrel_scp_const: nrel_value;;

			  => nrel_then: .proc_sum_operator17;;//Если с числовым значением
			  => nrel_else: .proc_sum_operator_CH1;;//Если это неизвестная
		*);;

	//14.а) Вызов процедуры нахождения значения узла, а также его типа и единицы измерения 
	-> .proc_sum_operator17 
		(*
			  <- call;;
			  -> rrel_1: rrel_fixed: rrel_scp_const: proc_findingrvalue125;;
			  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator2A_params 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _sum_node;;//Узел суммы
		                        -> rrel_2: rrel_fixed: rrel_scp_var: _some_node_1_1;;//сюда занесутся тип числа и единица измерения
					-> rrel_3: rrel_fixed: rrel_scp_var: _some_node_1_2;;//сюда занесётся число
				*);;
			  -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			  => nrel_goto: .proc_sum_operator18;;
		*);;

		-> .proc_sum_operator18 (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

		  => nrel_goto: .proc_sum_operator19;;
		*);;

	// Вызов процедуры, которая у неизвестной уравнения сгенерирует value_конструкцию и в rrel_3 занесёт предпоследний узел
	-> .proc_sum_operator19 
		(*
			  <- call;;
			  -> rrel_1: rrel_fixed: rrel_scp_const: proc_genera_sum;;
			  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator19_params 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _something_in_the_answer;;//Это неизвестная переменная уравнения
		                        -> rrel_2: rrel_fixed: rrel_scp_var: _some_node_1_1;;//Здесь тип числа 
		                        -> rrel_3: rrel_fixed: rrel_scp_var: _some_node_2_2;;//Пустой узел   
				*);;
			  -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			  => nrel_goto: .proc_sum_operator20;;
		*);;

                 -> .proc_sum_operator20 (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

		  => nrel_goto: .proc_sum_operator_7Ev_cool_A;;
		*);;
           
		-> .proc_sum_operator_7Ev_cool_A(*
		  <- contAssign;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _two;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: [0];;

		  => nrel_goto: .proc_sum_operator_7Ev_cool;;
		*);; 

		-> .proc_sum_operator_7Ev_cool(*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _some_node_1_2;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _one;;

		  => nrel_then: .proc_sum_operator_7Ev_cool_2;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

                 -> .proc_sum_operator_7Ev_cool_2 (*
                  <- contAdd;;
                   -> rrel_1: rrel_fixed: rrel_scp_var: _two;;
                   -> rrel_2: rrel_fixed: rrel_scp_var: _one;;
		   -> rrel_3: rrel_fixed: rrel_scp_var: _two;;
         		
                    => nrel_goto: .proc_sum_operator_7Ev;;
		   *);;

		 -> .proc_sum_operator_7Ev (*
		  <- searchSetStr3;;

		  -> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		  -> rrel_2: rrel_assign:  rrel_pos_const_perm: rrel_scp_var: _arc01;; 
		  -> rrel_3: rrel_assign: rrel_scp_var: _fon;;

		  -> rrel_set_3: rrel_assign: rrel_scp_var: _rty;;

		  => nrel_then: .proc_sum_operator_123;;
		  => nrel_else: .proc_sum_operator_return;;
		*);; 

		-> .proc_sum_operator_123 (*
		  <- searchElStr3;;

		  -> rrel_1: rrel_fixed: rrel_scp_var: _rty;;
		  -> rrel_2: rrel_assign:  rrel_pos_const_perm: rrel_scp_var: _arc02;; 
		  -> rrel_3: rrel_assign: rrel_scp_var: _non;;

		  => nrel_then: .proc_sum_operator_1234;;
		  => nrel_else: .proc_sum_operator8A;;
		*);;

                  -> .proc_sum_operator_1234 (*
		 <- eraseEl;;
		 -> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _arc02;;

		 => nrel_goto: .proc_sum_operator_110;;
		 *);;

                -> .proc_sum_operator_110 (*
		  <- searchElStr3;;

		  -> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
		  -> rrel_2: rrel_assign:  rrel_pos_const_perm: rrel_scp_var: _arc02;; 
		  -> rrel_3: rrel_fixed: rrel_scp_var: _non;;

		  => nrel_then: .proc_sum_operator_123;;
		  => nrel_else: .proc_sum_operator_bga1;;
		*);; 

                 -> .proc_sum_operator_bga1 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _Tom1;;
		  -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _non;;
		  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_5: rrel_fixed: rrel_scp_const: nrel_value;;

		   => nrel_then: .proc_sum1_operator_zv19_bum;;
		  => nrel_else: .proc_sum_operator_bga2;;
		*);;

	          -> .proc_sum_operator_bga2 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _Tom2;;
		  -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _non;;
		  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_5: rrel_fixed: rrel_scp_const: nrel_identification;;

		   => nrel_then: .proc_sum_operator_bga1_um_Ch2;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

   		-> .proc_sum1_operator_zv19_bum (*
		  <- call;;

		  -> rrel_1: rrel_fixed: rrel_scp_const: proc_findingrvalue125;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum1_operator_zv19_bum_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _non;;
                                -> rrel_2: rrel_fixed: rrel_scp_var: _some_node_3_1;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _ssilk3;;
                               
			*);;
		  -> rrel_3: rrel_assign: rrel_scp_var: _descr710;;

		  => nrel_goto: .proc_sum_operator1_zvoo7_um;;
		*);;


		-> .proc_sum_operator1_zvoo7_um (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr710;;

		  => nrel_goto: .proc_sum_operator7G;;
		*);;

                   -> .proc_sum_operator7G (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _ssilk3;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _three;;

		  => nrel_then: .proc_sum_operator7H;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

                  -> .proc_sum_operator7H (*
                  <- contSub;;
                  -> rrel_1: rrel_fixed: rrel_scp_var: _two;;
                  -> rrel_2: rrel_fixed: rrel_scp_var: _two;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _three;;
                    	
                   => nrel_goto: .proc_sum_operator7II3;;
		   *);;
                 
                  -> .proc_sum_operator7II3(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _some_node_3_1;;

		 => nrel_goto: .proc_sum_operator7II4;;
		 *);;

                -> .proc_sum_operator7II4(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _ssilk3;;

		 => nrel_goto: .proc_sum_operator_7II5;;
		 *);;

                 -> .proc_sum_operator_7II5 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _some_node_3_1;;

		 => nrel_goto: .proc_sum_operator_7II6;;
		 *);;

                   -> .proc_sum_operator_7II6 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _ssilk3;;

		 => nrel_goto: .proc_sum_operator_123;;
		 *);;
                                             
		-> .proc_sum_operator_bga1_um_Ch2 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _Tom2;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _three;;
                  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
                  -> rrel_5: rrel_assign: rrel_scp_var: _dec;;

		  => nrel_then: .proc_sum_operator12H;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;                                    
                 
                  -> .proc_sum_operator12H (*
                  <- contSub;;
                  -> rrel_1: rrel_fixed: rrel_scp_var: _two;;
                  -> rrel_2: rrel_fixed: rrel_scp_var: _two;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _three;;
                    	
                   => nrel_goto: .proc_sum_operator_123;;
		   *);;

                 -> .proc_sum_operator8A (*
		 <- eraseEl;;
		 -> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _rty;;

		 => nrel_goto: .proc_sum_operator8C;;
		 *);;

                 -> .proc_sum_operator8C (*
		 <- printNl;;
		 -> rrel_1: rrel_fixed: rrel_scp_const: [fuck];;

		 => nrel_goto: .proc_sum_operator8D;;
		 *);;

                  -> .proc_sum_operator8D (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _some_node_1_1;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc66;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _kbos;;
                  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc633;;
                  -> rrel_5: rrel_fixed: rrel_scp_const: rrel_second;;

		  => nrel_then: .proc_sum_operator8E;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

                  -> .proc_sum_operator8E (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _some_node_2_2;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc6;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _jimi;;

		  => nrel_then: .proc_sum_operator8F;;
		  => nrel_else: .proc_sum_operator_return;;
		  *);;


                  -> .proc_sum_operator8F (*
		  <- genElStr5;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _jimi;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _two;;
		  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_5: rrel_fixed: rrel_scp_var: _kbos;;

		  => nrel_goto: .proc_sum_operator_djum1;;
		*);;

	  
/*------------------------------------------------------------------------------------------------------------------------------------------------------*/
//Сложение
                 -> .proc_sum_operator_CH1 (*
		  <- searchSetStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc12;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _repas;;

                 -> rrel_set_3: rrel_assign: rrel_scp_var: _XXX;; 

		  => nrel_then:  .proc_sum_operator_CH2;;
                  => nrel_else: .proc_sum_operator_return;;
		*);;

		->  .proc_sum_operator_CH2 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _XXX;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc7;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _vota;;
               
                  => nrel_then: .proc_sum_operator_CH3;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

		 -> .proc_sum_operator_CH3 (*
		 <- eraseEl;;
		 -> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _arc7;;

		 => nrel_goto: .proc_sum_operator_CH4;;
		 *);;

		 -> .proc_sum_operator_CH4 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _zub01;;
		  -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _vota;;
		  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_5: rrel_fixed: rrel_scp_const: nrel_value;;

		   => nrel_then: .proc_sum_operator_CH5A;;
		  => nrel_else: .proc_sum_operator_CH2;;
		*);;
		
		-> .proc_sum_operator_CH5A(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _XXX;;

		 => nrel_goto: .proc_sum_operator_CH5;;
		 *);;

                -> .proc_sum_operator_CH5 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _checked;;

		 => nrel_goto: .proc_sum_operator_U1;;
		 *);;

                -> .proc_sum_operator_U1 (*
		  <- genElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _checked;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _vota;;

		  => nrel_goto: .proc_sum_operator_R1;;
		*);;
                 
		-> .proc_sum_operator_R1 (*
		  <- call;;
		  -> rrel_1: rrel_fixed: rrel_scp_const: proc_findingrvalue125;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator_R1_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _vota;;
                                -> rrel_2: rrel_fixed: rrel_scp_var: _some_node_3_1;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _ssilk3;;
                               
			*);;
		  -> rrel_3: rrel_assign: rrel_scp_var: _descr7;;

		  => nrel_goto: .proc_sum_operator_ZV7;;
		*);;

		-> .proc_sum_operator_ZV7 (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr7;;

		  => nrel_goto: .proc_sum_operator_ZV14B;;
		*);;
		
		-> .proc_sum_operator_ZV14B (*
		  <- call;;
		  -> rrel_1: rrel_fixed: rrel_scp_const: proc_genera_sum;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator_ZV14B_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _sum_node;;
                                -> rrel_2: rrel_fixed: rrel_scp_var: _some_node_3_1;; 
                                -> rrel_3: rrel_fixed: rrel_scp_var: _some_node_2_2;;   
			*);;
		  -> rrel_3: rrel_assign: rrel_scp_var: _descr110;;

		  => nrel_goto:  .proc_sum_operator_ZV15B;;
		*);;

                -> .proc_sum_operator_ZV15B (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr110;;

		  => nrel_goto: .proc_sum_operator_Dt222;;
		*);;

                   -> .proc_sum_operator_Dt222 (*
		  <- contAssign;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _two;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: [0];;

		  => nrel_goto: .proc_sum_operator_Dt2;;
		*);; 

		  -> .proc_sum_operator_Dt2 (*
		  <- searchSetStr3;;

		  -> rrel_1: rrel_fixed: rrel_scp_var: _param;;
		  -> rrel_2: rrel_assign:  rrel_pos_const_perm: rrel_scp_var: _arc01;; 
		  -> rrel_3: rrel_assign: rrel_scp_var: _kon;;

		  -> rrel_set_3: rrel_assign: rrel_scp_var: _fufu1;;

		  => nrel_then: .proc_sum_operator_ZV9a;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

		  -> .proc_sum_operator_ZV9a (*
		  <- searchElStr3;;

		  -> rrel_1: rrel_fixed: rrel_scp_var: _fufu1;;
		  -> rrel_2: rrel_assign:  rrel_pos_const_perm: rrel_scp_var: _arc02;; 
		  -> rrel_3: rrel_assign: rrel_scp_var: _kon15;;

		  => nrel_then: .proc_sum_operator_ZV10a;;
		  => nrel_else: .proc_sum_operator_xxx1;;
		*);;


                 -> .proc_sum_operator_ZV10a (*
		 <- eraseEl;;
		 -> rrel_1: rrel_erase: rrel_fixed: rrel_scp_var: _arc02;;

		 => nrel_goto: .proc_sum_operator_tyrok;;
		 *);;

                -> .proc_sum_operator_tyrok (*
		  <- searchElStr3;;

		  -> rrel_1: rrel_fixed: rrel_scp_var: _checked;;
		  -> rrel_2: rrel_assign:  rrel_pos_const_perm: rrel_scp_var: _arc02;; 
		  -> rrel_3: rrel_fixed: rrel_scp_var: _kon15;;

		  => nrel_then: .proc_sum_operator_ZV9a;;
		  => nrel_else: .proc_sum_operator_gg1;;
		*);;

                  -> .proc_sum_operator_gg1 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _T1;;
		  -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _kon15;;
		  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_5: rrel_fixed: rrel_scp_const: nrel_value;;

		   => nrel_then: .proc_sum_operator_yy1;;
		  => nrel_else: .proc_sum_operator_gg2;;
		*);;

	          -> .proc_sum_operator_gg2 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _T2;;
		  -> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _kon15;;
		  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_5: rrel_fixed: rrel_scp_const: nrel_identification;;

		   => nrel_then: .proc_sum_operator_zz1;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

                 -> .proc_sum_operator_yy1 (*
		  <- call;;
		  -> rrel_1: rrel_fixed: rrel_scp_const: proc_findingrvalue125;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: .proc_sum_operator_yy1_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _kon15;;
                                -> rrel_2: rrel_fixed: rrel_scp_var: _some_node_1_1;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _some_node_1_2;;
                               
			*);;
		  -> rrel_3: rrel_assign: rrel_scp_var: _descr217;;

		  => nrel_goto: .proc_sum_operator_yy2;;
		*);;

		-> .proc_sum_operator_yy2 (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr217;;

		  => nrel_goto: .proc_sum_operator_yy3;;
		*);;

                -> .proc_sum_operator_yy3 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _some_node_1_2;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc66;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _one;;

		  => nrel_then: .proc_sum_operator_yy5;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

		 -> .proc_sum_operator_yy5 (*
                  <- contAdd;;
                   -> rrel_1: rrel_fixed: rrel_scp_var: _two;;
                   -> rrel_2: rrel_fixed: rrel_scp_var: _one;;
		   -> rrel_3: rrel_fixed: rrel_scp_var: _two;;
         		
                    => nrel_goto: .proc_sum_operator_yy6;;
		   *);;

                 -> .proc_sum_operator_yy6 (*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _some_node_1_1;;

		 => nrel_goto: .proc_sum_operator_yy7;;
		 *);;

                -> .proc_sum_operator_yy7 (*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _some_node_1_2;;

		 => nrel_goto: .proc_sum_operator_yy8;;
		 *);;

                 ->.proc_sum_operator_yy8 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _some_node_1_1;;

		 => nrel_goto: .proc_sum_operator_yy9;;
		 *);; 

                 -> .proc_sum_operator_yy9 (*
		 <- genEl;;
		 -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _some_node_1_2;;

		 => nrel_goto: .proc_sum_operator_ZV9a;;
		 *);; 

		-> .proc_sum_operator_zz1 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _T2;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc3;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _one;;
                  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
                  -> rrel_5: rrel_assign: rrel_scp_var: _dec;;

		  => nrel_then: .proc_sum_operator_zz3;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

                  -> .proc_sum_operator_zz3 (*
                  <- contAdd;;
                   -> rrel_1: rrel_fixed: rrel_scp_var: _two;;
                   -> rrel_2: rrel_fixed: rrel_scp_var: _one;;
		   -> rrel_3: rrel_fixed: rrel_scp_var: _two;;
         		
                    => nrel_goto: .proc_sum_operator_ZV9a;;
		   *);;

                   -> .proc_sum_operator_xxx1 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _ssilk3;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc66;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _three;;

		  => nrel_then: .proc_sum_operator_xxx2;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

                  -> .proc_sum_operator_xxx2 (*
                  <- contAdd;;
                   -> rrel_1: rrel_fixed: rrel_scp_var: _two;;
                   -> rrel_2: rrel_fixed: rrel_scp_var: _three;;
		   -> rrel_3: rrel_fixed: rrel_scp_var: _two;;
         		
                    => nrel_goto: .proc_sum_operator_ppp3;;
		   *);;

                -> .proc_sum_operator_ppp3 (*
		  <- searchElStr5;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _some_node_3_1;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc66;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _kbos;;
                  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc633;;
                  -> rrel_5: rrel_fixed: rrel_scp_const: rrel_second;;

		  => nrel_then: .proc_sum_operator_ppp4;;
		  => nrel_else: .proc_sum_operator_return;;
		*);;

                  -> .proc_sum_operator_ppp4 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _some_node_2_2;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc6;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _jimi;;

		  => nrel_then: .proc_sum_operator_ppp5;;
		  => nrel_else: .proc_sum_operator_return;;
		  *);;

                 -> .proc_sum_operator_ppp5 (*
		  <- genElStr5;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _jimi;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _two;;
		  -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		  -> rrel_5: rrel_fixed: rrel_scp_var: _kbos;;

		  => nrel_goto: .proc_sum_operator_xxx3;;
		*);;
		
		-> .proc_sum_operator_xxx3 (*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _fufu1;;

		 => nrel_goto: .proc_sum_operator_xxx4;;
		 *);;

                 -> .proc_sum_operator_xxx4(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _checked;;

		 => nrel_goto: .proc_sum_operator_djum1;;
		 *);;
		
                  -> .proc_sum_operator_djum1 (*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _some_node_1_2;;

		 => nrel_goto: .proc_sum_operator_djum2;;
		 *);;

                 -> .proc_sum_operator_djum2(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _some_node_1_1;;

		 => nrel_goto: .proc_sum_operator_djum7;;
		 *);;

                 -> .proc_sum_operator_djum7(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _ssilk3;;

		 => nrel_goto: .proc_sum_operator_djum8;;
		 *);;

                 -> .proc_sum_operator_djum8(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _some_node_3_1;;

		 => nrel_goto: .proc_sum_operator_djum3;;
		 *);;

                  -> .proc_sum_operator_djum3(*
		 <- eraseEl;;
		 -> rrel_1: rrel_fixed: rrel_const: rrel_erase: rrel_node: rrel_scp_var: _some_node_2_2;;

		 => nrel_goto: .proc_sum_operator_return;;
		 *);;

		-> .proc_sum_operator_return (*
		<- return;;
		*);;
	*);;
*);;
